# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs

defaults: &defaults
  docker:
    - image: circleci/node:13.8.0

commands:
  print_pipeline_id:
    description: "demo commands"
    parameters:
      workflow_id:
        type: string
        default: "default workFlowId"
    steps:
      - checkout
      - run: echo << parameters.workflow_id >>


jobs:
#  print_hello:
#    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
#    # See: https://circleci.com/docs/configuration-reference/#executor-job
#    docker:
#      - image: circleci/node:13.8.0
#    # Add steps to the job
#    # See: https://circleci.com/docs/configuration-reference/#steps
#    steps:
#      - checkout
#      - run:
#          name: "Say My pipeline id"
#          command: "echo $MY_ENV_VAR"
#  print_world:
#    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
#    # See: https://circleci.com/docs/configuration-reference/#executor-job
#    docker:
#      - image: circleci/node:13.8.0
#    # Add steps to the job
#    # See: https://circleci.com/docs/configuration-reference/#steps
#    steps:
#      - checkout
#      - run:
#          name: "Say hello"
#          command: "echo world"
#  save_hello_world_output:
#    <<: *defaults
#    steps:
#      - checkout
#      - run:
#          name: "output to file"
#          command: echo "hello world haha" > output.txt
#      - persist_to_workspace:
#          root: .
#          paths:
#            - output.txt
#
#  print_output_file:
#    <<: *defaults
#    steps:
#      - checkout
#      - attach_workspace:
#            at: .
#      - run:
#          name: "output to file"
#          command: cat output.txt
#
#  print_pipeline:
#    <<: *defaults
#    steps:
#      - print_pipeline_id:
#          workflow_id: $CIRCLE_WORKFLOW_ID
#
#  demo_fail:
#    <<: *defaults
#    steps:
#      - run: exit 1
#      - run:
#          name: erroe
#          command: echo "erorr sml"
#          when: on_fail
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          # You can get this ID in the section where you registered the SSH Key
          fingerprints: ["37:06:73:87:fb:78:b9:7b:73:69:e1:8a:6b:d1:20:94"]
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory.txt main.yml   

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - create_infrastructure
      - configure_infrastructure
